import ctypes
from time import sleep
import win32file
import numpy as np

handle = 0
found = False
class MOUSE_IO(ctypes.Structure):
    _fields_ = [
                ("button", ctypes.c_char),
                ("x", ctypes.c_char),
                ("y", ctypes.c_char),
                ("wheel", ctypes.c_char),
                ("unk1", ctypes.c_char),
            ]


def device_initialize(device_name: str) -> bool:
    global handle
    try:
        handle = win32file.CreateFileW(device_name, win32file.GENERIC_WRITE, 0, None, win32file.OPEN_ALWAYS, win32file.FILE_ATTRIBUTE_NORMAL, 0)
    except:
        pass
    return int(handle)

def mouse_open() -> bool:
    global found
    global handle
    if handle: 
        return found
    if device_initialize('\\??\\ROOT#SYSTEM#0002#{1abc05c0-c378-41b9-9cef-df1aba82b015}'): #Would be best to put this in a for loop and only change the 0002
            found = True
    else:
        if device_initialize('\\??\\ROOT#SYSTEM#0001#{1abc05c0-c378-41b9-9cef-df1aba82b015}'): #Logitech CVE thank you ekknod
            found = True

    return found

def call_mouse(buffer) -> bool:
    global handle
    print(buffer.x)
    return win32file.DeviceIoControl(handle, 0x2a2010, ctypes.c_void_p(ctypes.addressof(buffer)), 0 )

def mouse_move(button, x, y, wheel) -> None:
    global handle

    e = MOUSE_IO()
    e.x = x
    e.y = y
    e.unk1 = 0
    e.button = button
    e.wheel = wheel
    print(e.x)
    if not call_mouse(e):
        mouse_close()
        mouse_open()

def mouse_close() -> None:
    global handle
    if handle != 0:
        win32file.CloseHandle(handle)
        handle = 0
mouse_open()

while 1:
    mouse_move(0,0,1,0)
    sleep(1)
